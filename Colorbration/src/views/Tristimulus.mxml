<?xml version="1.0" encoding="utf-8"?>
<!-- 
//	Module:			Tristimulus.mxml
//	Description: 	XYZ
//
// 	Author(s):		C.T.Yeung		(cty)
//
// Copyright (c) 2009 C.T.Yeung

// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:

// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-->
<mx:Canvas 	xmlns:mx="http://www.adobe.com/2006/mxml"
			width="100%" height="100%"
		    creationComplete="onCreationComplete()">
	
	
	<mx:Script>
		<![CDATA[
			import com.Spectral2XYZ;
			import com.StandardObserver;
			import com.Illuminants;
			import com.SpectralData;
			
			public var spect2XYZ:Spectral2XYZ;
			public var sample:SpectralData;
			public var source:SpectralData;
						
			[Bindable] public var wid:int = 80;
			
			protected function onCreationComplete():void
			{
				// XYZ calculation object
				spect2XYZ = new Spectral2XYZ();
			}
			
			public function set selectedIlluminant(src:SpectralData):void
			{
				source = src;
				spect2XYZ.source = source;
				onChangeDisplayValues();
			}
			
			public function set selectedSample(sam:SpectralData):void
			{
				sample = sam;
				spect2XYZ.sample = sample;
				onChangeDisplayValues();
			}
			
			protected function onChangeDisplayValues():void
			{
				txtSample.text = (sample)?sample.name.toString():"";
				txtSource.text = (source)?source.name.toString():"";
				txtSourceX.text = spect2XYZ.Xw.toString();
				txtSourceY.text = spect2XYZ.Yw.toString();
				txtSourceZ.text = spect2XYZ.Zw.toString();
				txtSampleX.text = spect2XYZ.Xs.toString();
				txtSampleY.text = spect2XYZ.Ys.toString();
				txtSampleZ.text = spect2XYZ.Zs.toString();
			}
			
		]]>
	</mx:Script>

	<mx:VBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
		<mx:HBox width="{wid*5}">
			<mx:Label text="Sample:"/>
			<mx:Label id="txtSample"/>
		</mx:HBox>
		<mx:HBox>
			<mx:VBox>
				<mx:Label text="X"/>
				<mx:TextInput id="txtSampleX" width="{wid}"/>
			</mx:VBox>
			<mx:VBox>
				<mx:Label text="Y"/>
				<mx:TextInput id="txtSampleY" width="{wid}"/>
			</mx:VBox>
			<mx:VBox>
				<mx:Label text="Z"/>
				<mx:TextInput id="txtSampleZ" width="{wid}"/>
			</mx:VBox>
		</mx:HBox>
		<mx:Spacer height="20"/>
		<mx:HBox width="{wid*5}">
			<mx:Label text="Source:"/>
			<mx:Label id="txtSource"/>
		</mx:HBox>
		<mx:HBox>
			<mx:VBox>
				<mx:Label text="X"/>
				<mx:TextInput id="txtSourceX" width="{wid}"/>
			</mx:VBox>
			<mx:VBox>
				<mx:Label text="Y"/>
				<mx:TextInput id="txtSourceY" width="{wid}"/>
			</mx:VBox>
			<mx:VBox>
				<mx:Label text="Z"/>
				<mx:TextInput id="txtSourceZ" width="{wid}"/>
			</mx:VBox>
		</mx:HBox>
	</mx:VBox>
</mx:Canvas>
