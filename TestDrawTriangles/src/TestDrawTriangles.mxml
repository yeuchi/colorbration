<?xml version="1.0" encoding="utf-8"?>
<!--
// ==================================================================
// Module:		TestDrawTriangle.mxml
//
// Description:	This is a triangle gradient experiment project I am
//				putting together to test a filter from pixelbender
//				exchange.  Unfortunately, IlluminatiBG's triangle
//				gradient filter does not seem to work well in my code.
//				So, I will try out 2 other methods here for comparison.
//				First one is a weighted method that is like IlluminatiBG's.
//				Second is accomplished with a 3x3 matrix.
//
// Reference:	http://www.adobe.us/cfusion/exchange/index.cfm?event=extensionDetail&loc=en_us&extid=1937522
//
// Author(s):	C.T. Yeung		cty
//
// History:
// 15Sep10		first started									cty
//
// Copyright (c) 2009 C.T.Yeung
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:

// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
// ==================================================================
-->
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:v="*"
			   width="510" height="600" 
			   creationComplete="onCreationComplete()"
			   xmlns:GradientMethods="GradientMethods.*" viewSourceURL="srcview/index.html">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import GradientMethods.IlluminatiTriangle;
			import GradientMethods.MatrixTriangle;
			import GradientMethods.Triangle;
			import GradientMethods.WeightedTriangle;
			
			import mx.core.UIComponent;
			protected var uic:Triangle;
			protected var illuminati:IlluminatiTriangle;
			protected var weighted:WeightedTriangle;
			protected var matrix:MatrixTriangle;
			
			protected function onCreationComplete():void {
				illuminati = new IlluminatiTriangle();
				illuminati.width = 500;
				illuminati.height = 500;
				weighted = new WeightedTriangle();
				weighted.width = 500;
				weighted.height = 500;
				matrix = new MatrixTriangle();
				matrix.width = 500;
				matrix.height = 500;
				onClickRdo(1);
			}
			
			protected function onChangeColor():void {
				uic.ca = clrA.selectedColor;
				uic.cb = clrB.selectedColor;
				uic.cc = clrC.selectedColor;
				onClickClear();
			}
			
			protected function onClickClear():void {
				uic.clear();
				var t:Number = uic.drawTriangle();
				elapsed.text = t.toString();
			}
			
			protected function onClickRdo(value:int):void {
				box.removeAllChildren();
				rdo0.selected = false;
				rdo1.selected = false;
				rdo2.selected = false;
				
				switch(value) {
					case 0:
						uic = illuminati;
						rdo0.selected = true;
						break;
					
					case 1:
						rdo1.selected = true;
						uic = weighted;
						break;
					
					case 2:
						rdo2.selected = true;
						uic = matrix;
						break;
				}
				uic.label = elapsed;
				box.addChild(uic);
			}
		]]>
	</fx:Script>
	<mx:VBox verticalAlign="middle" horizontalAlign="center">
		<mx:HBox>
			<mx:Label text="A:"/>
			<mx:ColorPicker id="clrA" selectedColor="0xFF0000" change="onChangeColor()" enabled="true"/>
			<mx:Label text="B:"/>
			<mx:ColorPicker id="clrB" selectedColor="0xFF00" change="onChangeColor()" enabled="true"/>
			<mx:Label text="C:"/>
			<mx:ColorPicker id="clrC" selectedColor="0xFF" change="onChangeColor()" enabled="true"/>
		</mx:HBox>
		<mx:Box id="box" borderColor="0x00" borderStyle="solid" 
				width="500" height="500" 
				horizontalScrollPolicy="off" verticalScrollPolicy="off"/>
		<mx:HBox>
			<mx:Label id="elapsed" text="Elapsed:"/>
			<mx:Spacer width="10"/>
			<mx:RadioButton id="rdo0" label="Illuminati" click="onClickRdo(0)"/>
			<mx:RadioButton id="rdo1" label="Weighted" click="onClickRdo(1)"/>
			<mx:RadioButton id="rdo2" label="Matrix" click="onClickRdo(2)"/>
		</mx:HBox>
	</mx:VBox>
</s:Application>
